# Mutation
type Mutation {
  # forgot password
  requestResetPassword(email: String!): Response!
  verifyResetPasswordPin(email: String!, pin: String!): Response!
  resetPassword(email: String!, password: String!): Response!

  createCategory(data: CategoryInput!): Category
  updateCategory(id: Int!, data: CategoryInput!): Category!
  deleteCategory(id: Int!): Category!
  createMenu(data: MenuInput!): Menu
  updateMenu(id: Int!, data: MenuInput!): Menu!
  deleteMenu(id: Int!): Menu!
  createContent(data: ContentInput!): Content
  updateContent(id: Int!, data: ContentInput!): Content!
  deleteContent(id: Int!): Content
  createPage(data: PageInput!): Page
  updatePage(id: Int!, data: PageInput!): Page!
  deletePage(id: Int!): Page!
  # Account Mutation
  login(username: String!, password: String!): AuthPayload!
  changePassword(
    id: Int!
    oldPassword: String!
    newPassword: String!
  ): Customer!
  # verify email
  verifyEmail(token: String!): Response!
  createCustomer(data: CustomerInput!): AuthPayload!
  # add customer by admin
  addCustomer(data: CustomerInput!): Customer!
  updateCustomer(id: Int!, data: CustomerInput!): Customer!
  deleteCustomer(id: Int!): Customer!
  createCustomerAddress(data: CustomerAddressInput!): CustomerAddress!
  updateCustomerAddress(id: Int!, data: CustomerAddressInput!): CustomerAddress!
  deleteCustomerAddress(id: Int!): CustomerAddress!
  createCustomerLevel(data: CustomerLevelInput): CustomerLevel!
  updateCustomerLevel(id: Int!, data: CustomerLevelInput): CustomerLevel!
  deleteCustomerLevel(id: Int!): CustomerLevel!
  createInvoice(data: InvoiceInput): Invoice!
  updateInvoice(id: Int!, data: InvoiceInput): Invoice!
  deleteInvoice(id: Int!): Invoice!
  createInvoiceDetail(data: InvoiceDetailInput): InvoiceDetail!
  updateInvoiceDetail(id: Int!, data: InvoiceDetailInput): InvoiceDetail!
  deleteInvoiceDetail(id: Int!): InvoiceDetail!
  createOrder(data: OrderInput): Order!
  updateOrder(id: Int!, data: OrderInput): Order!
  deleteOrder(id: Int!): Order!
  createOrderDetail(data: OrderDetailInput): OrderDetail!
  updateOrderDetail(id: Int!, data: OrderDetailInput): OrderDetail!
  deleteOrderDetail(id: Int!): OrderDetail!
  createPointsHistory(data: PointsHistoryInput): PointsHistory!
  updatePointsHistory(id: Int!, data: PointsHistoryInput): PointsHistory!
  deletePointsHistory(id: Int!): PointsHistory!
  createPromotion(data: PromotionInput): Promotion!
  updatePromotion(id: Int!, data: PromotionInput): Promotion!
  deletePromotion(id: Int!): Promotion!
  createRevenue(data: RevenueInput): Revenue!
  updateRevenue(id: Int!, data: RevenueInput): Revenue!
  deleteRevenue(id: Int!): Revenue!
  createTable(data: TableInput): Table!
  updateTable(id: Int!, data: TableInput): Table!
  deleteTable(id: Int!): Table!
  # send mail after create reservation
  sendMailReservation(data: ReservationInput!): Response!
  createReservation(data: ReservationInput): Reservation!
  updateReservation(id: Int!, data: ReservationInput): Reservation!
  deleteReservation(id: Int!): Reservation!
  createReview(data: ReviewInput): Review!
  updateReview(id: Int!, data: ReviewInput): Review!
  deleteReview(id: Int!): Review!
  createVoucher(data: VoucherInput): Voucher!
  updateVoucher(id: Int!, data: VoucherInput): Voucher!
  deleteVoucher(id: Int!): Voucher!
  updateVoucherStatus(id: Int!, status: String!): Voucher!
  loginEmployee(username: String!, password: String!): AuthEmployee!
  createEmployee(data: EmployeeInput): Employee!
  updateEmployee(id: Int!, data: EmployeeInput): Employee!
  deleteEmployee(id: Int!): Employee!
  createPosition(data: PositionInput): Position!
  updatePosition(id: Int!, data: PositionInput): Position!
  deletePosition(id: Int!): Position!
}

input CategoryInput {
  name: String!
  menu: [MenuInput!]
}
input MenuInput {
  categoryId: Int
  name: String!
  description: String!
  price: Float!
  image: String!
  category: [CategoryInput!]
}

input ContentInput {
  title: String
  slogan: String
  image: String
  description: String
  position: Int
  pageId: Int!
}

input PageInput {
  name: String!
}

input CustomerInput {
  name: String
  phone: String
  email: String!
  birthday: DateTime
  status: Boolean
  levelId: Int
  points: Int
  username: String!
  password: String
}

input CustomerAddressInput {
  customerId: Int!
  address: String!
}

input CustomerLevelInput {
  name: String!
  description: String!
  discount: Float!
  points: Int!
  benefits: String!
}

input InvoiceInput {
  customerId: Int
  voucherId: Int
  paymentMethod: String!
  paymentStatus: String!
  totalPrice: Float!
  note: String
}

input InvoiceDetailInput {
  invoiceId: Int!
  itemId: Int!
  quantity: Int!
  price: Float!
  total: Float!
}

input OrderInput {
  customerId: Int!
  status: String!
  address: String!
  transportFee: Int!
  paymentMethod: String!
  paymentStatus: String!
  voucherId: Int
  total: Float
  note: String
}

input OrderDetailInput {
  orderId: Int!
  itemId: Int!
  quantity: Int!
  price: Float!
  total: Float!
}

input PointsHistoryInput {
  customerId: Int!
  orderId: Int
  invoiceId: Int
  voucherId: Int
  earnedPoints: Int
  deductedPoints: Int
  transactionDate: DateTime!
}

input PromotionInput {
  name: String!
  description: String!
  startDate: DateTime!
  endDate: DateTime!
  target: String!
  condition: String!
  discount: Float!
  status: String!
}

input RevenueInput {
  date: DateTime!
  revenue: Float!
  cost: Float!
}

input TableInput {
  name: String
  capacity: Int
  status: String
}

input ReservationInput {
  customerId: Int
  tableId: Int
  name: String!
  phone: String!
  email: String!
  capacity: Int!
  note: String
  reservation_time: String!
  reservation_date: DateTime!
  status: String!
}

input ReviewInput {
  customerId: Int!
  content: String!
  rating: Int!
  status: Boolean!
}

input VoucherInput {
  customerId: Int!
  name: String!
  code: String!
  description: String!
  discount: Float!
  expiredDate: String!
  minSpend: Float!
  maxDiscount: Int!
  # expireDate: DateTime!
  status: String!
}

input EmployeeInput {
  name: String!
  gender: String!
  email: String!
  phone: String!
  address: String!
  birthday: DateTime
  positionId: Int!
  status: Boolean!
  username: String!
  password: String!
}

input PositionInput {
  name: String!
  description: String!
  salary: String!
}

#Query

type Query {
  # Auth
  checkUsernameExistence(username: String!): usernameExist
  checkEmailExistence(email: String!): emailExist
  checkToken(token: String!): AuthPayload
  # get Customer by phone number
  getCustomerByPhone(phone: String!): Customer

  category(id: ID!): Category
  item(id: ID!): Menu
  content(id: ID!): Content
  page(name: String!): Page
  customer(id: ID!): Customer
  customerLevel(id: Int!): CustomerLevel
  customerAddress(id: ID!): CustomerAddress
  invoice(id: Int!): Invoice
  invoiceDetail(id: Int!): InvoiceDetail
  order(id: Int!): Order
  orderDetail(id: Int!): OrderDetail
  pointsHistory(id: ID!): PointsHistory
  promotion(id: ID!): Promotion
  revenue(id: ID!): Revenue
  table(id: ID!): Table
  reservation(id: ID!): Reservation
  review(id: ID!): Review
  voucher(id: Int!): Voucher
  employee(id: ID!): Employee
  position(id: ID!): Position

  categoryList: [Category!]!
  menuList: [Menu!]!
  contentList: [Content!]!
  pageList: [Page!]!
  customerList: [Customer!]!
  customerLevelList: [CustomerLevel!]!
  customerAddressList: [CustomerAddress!]!
  invoiceList: [Invoice!]!
  invoiceDetailList: [InvoiceDetail!]!
  orderList: [Order!]!
  orderDetailList: [OrderDetail!]!
  pointsHistoryList: [PointsHistory!]!
  promotionList: [Promotion!]!
  revenueList: [Revenue!]!
  tableList: [Table!]!
  reservationList: [Reservation!]!
  reviewList: [Review!]!
  voucherList: [Voucher!]!
  employeeList: [Employee!]!
  positionList: [Position!]!
}

# TypeDefs
# forgot password
type Response {
  status: String!
  message: String!
}

type usernameExist {
  username: String!
}
type emailExist {
  email: String!
}
type Category {
  category_id: Int!
  tsid: String!
  name: String!
  menu: [Menu!]
}

type Menu {
  item_id: Int!
  tsid: String!
  name: String!
  description: String!
  price: Float!
  image: String
  # category_id: Int!
  category: [Category!]
}

type Content {
  content_id: Int!
  tsid: String!
  title: String!
  slogan: String
  image: String
  description: String!
  position: Int
  page: Page
}

type Page {
  page_id: Int!
  name: String!
  content: [Content!]
}

type AuthPayload {
  customer: Customer!
  token: String!
}

type Customer {
  customer_id: Int!
  tsid: String!
  name: String
  phone: String
  email: String!
  address: [CustomerAddress!]
  birthday: DateTime
  points: Int!
  level: CustomerLevel!
  status: Boolean!
  username: String!
  password: String!
  createdDate: DateTime!
  updatedDate: DateTime!
  invoice: [Invoice!]
  orders: [Order!]
  point_histories: [PointsHistory!]
  reservations: [Reservation!]
  reviews: [Review!]
  vouchers: [Voucher!]
}

type CustomerAddress {
  address_id: Int!
  tsid: String!
  customer: Customer!
  address: String!
}

type CustomerLevel {
  level_id: Int!
  tsid: String!
  name: String!
  description: String!
  discount: Float!
  points: Int!
  benefits: String!
  customers: [Customer!]
}

type Invoice {
  invoice_id: Int!
  tsid: String!
  invoice_time: DateTime!
  customer: Customer
  voucher: Voucher
  payment_method: String!
  payment_status: String!
  total_price: Float!
  note: String
  invoice_details: [InvoiceDetail!]
}

type InvoiceDetail {
  invoice_detail_id: Int!
  tsid: String!
  invoice: Invoice!
  item: Menu!
  quantity: Int!
  unit_price: Float!
  total_price: Float!
}

type Order {
  order_id: Int!
  tsid: String!
  customer: Customer!
  status: String!
  delivery_address: String!
  voucher_id: Int
  transport_fee: Float!
  payment_method: String!
  payment_status: String!
  total_price: Float!
  note: String
  created_at: DateTime!
  updated_at: DateTime!
  order_details: [OrderDetail!]
}

type OrderDetail {
  order_detail_id: Int!
  tsid: String!
  order: Order!
  item: Menu!
  quantity: Int!
  unit_price: Float!
  total_price: Float!
}

type PointsHistory {
  point_history_id: Int!
  tsid: String!
  customer: Customer!
  order: Order
  invoice: Invoice
  voucher: Voucher
  points_earned: Int
  points_deducted: Int
  transaction_date: DateTime!
}

type Reservation {
  reservation_id: Int!
  tsid: String!
  customer: Customer
  table: Table
  name: String!
  phone: String!
  email: String!
  capacity: Int!
  note: String
  reservation_time: String!
  reservation_date: DateTime!
  status: String!
}

type Table {
  table_id: Int!
  tsid: String!
  name: String!
  capacity: Int!
  status: String!
}
type Review {
  review_id: Int!
  tsid: String!
  customer: Customer!
  content: String!
  rating: Int!
  status: String!
  createdDate: DateTime!
}

type Promotion {
  promotion_id: Int!
  tsid: String!
  name: String!
  description: String!
  startDate: DateTime!
  endDate: DateTime!
  target: String!
  condition: String!
  discount: Float!
  status: String!
}

type Revenue {
  revenue_id: Int!
  tsid: String!
  date: DateTime!
  revenue: Float!
  cost: Float!
}

type Voucher {
  voucher_id: Int!
  tsid: String!
  customer: Customer!
  name: String!
  code: String!
  description: String!
  discount: Float!
  expired_date: String
  min_spend: Int
  max_discount: Int
  status: String!
}

type AuthEmployee {
  employee: Employee!
  token: String!
}

type Employee {
  employee_id: Int!
  tsid: String!
  name: String!
  gender: String!
  email: String!
  phone: String!
  address: String!
  birthday: DateTime
  position: Position!
  status: Boolean!
  is_admin: Boolean!
  username: String!
  password: String!
  createdDate: DateTime!
  updatedDate: DateTime!
}

type Position {
  position_id: Int!
  tsid: String!
  name: String!
  description: String!
  salary: String!
  employees: [Employee!]
}

scalar DateTime
