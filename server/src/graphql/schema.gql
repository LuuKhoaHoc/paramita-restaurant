# Mutation
type Mutation {
  createCategory(name: String!): Category
  updateCategory(id: ID!, name: String!): Category!
  deleteCategory(id: ID!): Category!
  createMenu(data: MenuInput!): Menu
  updateMenu(id: ID!, data: MenuInput!): Menu!
  deleteMenu(id: ID!): Menu!
  createContent(data: ContentInput!): Content
  updateContent(id: ID!, data: ContentInput!): Content!
  deleteContent(id: ID!): Content
  createCustomer(data: CustomerInput!): Customer
  updateCustomer(id: ID!, data: CustomerInput!): Customer!
  deleteCustomer(id: ID!): Customer!
  createCustomerAddress(customerId: ID!, address: String!): CustomerAddress!
  updateCustomerAddress(
    id: ID!
    customerId: ID!
    address: String!
  ): CustomerAddress!
  deleteCustomerAddress(id: ID!): CustomerAddress!
  createCustomerLevel(data: CustomerLevelInput): CustomerLevel!
  updateCustomerLevel(id: ID!, data: CustomerLevelInput): CustomerLevel!
  deleteCustomerLevel(id: ID!): CustomerLevel!
  createInvoice(data: InvoiceInput): Invoice!
  updateInvoice(id: ID!, data: InvoiceInput): Invoice!
  deleteInvoice(id: ID!): Invoice!
  createInvoiceDetail(data: InvoiceDetailInput): InvoiceDetail!
  updateInvoiceDetail(id: ID!, data: InvoiceDetailInput): InvoiceDetail!
  deleteInvoiceDetail(id: ID!): InvoiceDetail!
  createOrder(data: OrderInput): Order!
  updateOrder(id: ID!, data: OrderInput): Order!
  deleteOrder(id: ID!): Order!
  createOrderDetail(data: OrderDetailInput): OrderDetail!
  updateOrderDetail(id: ID!, data: OrderDetailInput): OrderDetail!
  deleteOrderDetail(id: ID!): OrderDetail!
  createPointsHistory(data: PointsHistoryInput): PointsHistory!
  updatePointsHistory(id: ID!, data: PointsHistoryInput): PointsHistory!
  deletePointsHistory(id: ID!): PointsHistory!
  createPromotion(data: PromotionInput): Promotion!
  updatePromotion(id: ID!, data: PromotionInput): Promotion!
  deletePromotion(id: ID!): Promotion!
  createRevenue(data: RevenueInput): Revenue!
  updateRevenue(id: ID!, data: RevenueInput): Revenue!
  deleteRevenue(id: ID!): Revenue!
  createTable(data: TableInput): Table!
  updateTable(id: ID!, data: TableInput): Table!
  deleteTable(id: ID!): Table!
  createReservation(data: ReservationInput): Reservation!
  updateReservation(id: ID!, data: ReservationInput): Reservation!
  deleteReservation(id: ID!): Reservation!
  createReview(data: ReviewInput): Review!
  updateReview(id: ID!, data: ReviewInput): Review!
  deleteReview(id: ID!): Review!
  createVoucher(data: VoucherInput): Voucher!
  updateVoucher(id: ID!, data: VoucherInput): Voucher!
  deleteVoucher(id: ID!): Voucher!
  createEmployee(data: EmployeeInput): Employee!
  updateEmployee(id: ID!, data: EmployeeInput): Employee!
  deleteEmployee(id: ID!): Employee!
  createPosition(data: PositionInput): Position!
  updatePosition(id: ID!, data: PositionInput): Position!
  deletePosition(id: ID!): Position!
}

input MenuInput {
  categoryId: ID!
  name: String!
  description: String!
  price: Float!
  image: String!
}

input ContentInput {
  title: String!
  slogan: String
  description: String!
}

input CustomerInput {
  name: String!
  phone: String!
  email: String!
  birthday: DateTime!
  points: Int!
  levelId: ID!
  status: Boolean!
  username: String!
  password: String!
}

input CustomerLevelInput {
  name: String!
  description: String!
  discount: Float!
  points: Int!
  benefits: String!
}

input InvoiceInput {
  date: DateTime!
  customerId: ID!
  paymentMethod: String!
  paymentStatus: Boolean!
  note: String
}

input InvoiceDetailInput {
  invoiceId: ID!
  itemId: ID!
  quantity: Int!
  price: Float!
  total: Float!
}

input OrderInput {
  date: DateTime!
  customerId: ID!
  status: Boolean!
  address: String!
  paymentMethod: String!
  shippingFee: Float!
  paymentMethod: String!
  paymentStatus: Boolean!
  note: String
}

input OrderDetailInput {
  orderId: ID!
  item: Menu!
  quantity: Int!
  price: Float!
  total: Float!
}

input PointsHistoryInput {
  customerId: ID!
  order: Order
  voucher: Voucher
  earnedPoints: Int
  deductedPoints: Int
  transactionDate: DateTime!
}

input PromotionInput {
  name: String!
  description: String!
  startDate: DateTime!
  endDate: DateTime!
  target: String!
  condition: String!
  discount: Float!
  status: Boolean!
}

input RevenueInput {
  date: DateTime!
  revenue: Float!
  cost: Float!
}

input TableInput {
  name: String!
  capacity: Int!
  status: Boolean!
}

input ReservationInput {
  customerId: ID!
  tableId: ID!
  description: String!
  reservationDate: DateTime!
  status: Boolean!
}

input ReviewInput {
  customerId: ID!
  content: String!
  rating: Int!
  status: Boolean!
}

input VoucherInput {
  customerId: ID!
  name: String!
  code: String!
  description: String!
  discount: Float!
  expireDate: DateTime!
  status: Boolean!
}

input EmployeeInput {
  name: String!
  gender: String!
  email: String!
  phone: String!
  address: String!
  birthday: DateTime!
  positionId: ID!
  status: Boolean!
  username: String!
  password: String!
}

input PositionInput {
  name: String!
  description: String!
  salary: Float!
}

#Query

type Query {
  category(id: ID!): Category
  item(id: ID!): Menu
  content(id: ID!): Content
  customer(id: ID!): Customer
  customerLevel(id: ID!): CustomerLevel
  customerAddress(id: ID!): CustomerAddress
  invoice(id: ID!): Invoice
  invoiceDetail(id: ID!): InvoiceDetail
  order(id: ID!): Order
  orderDetail(id: ID!): OrderDetail
  pointsHistory(id: ID!): PointsHistory
  promotion(id: ID!): Promotion
  revenue(id: ID!): Revenue
  table(id: ID!): Table
  reservation(id: ID!): Reservation
  review(id: ID!): Review
  voucher(id: ID!): Voucher
  employee(id: ID!): Employee
  position(id: ID!): Position

  categoryList: [Category!]!
  menuList: [Menu!]!
  contentList: [Content!]!
  customerList: [Customer!]!
  customerLevelList: [CustomerLevel!]!
  customerAddressList: [CustomerAddress!]!
  invoiceList: [Invoice!]!
  invoiceDetailList: [InvoiceDetail!]!
  orderList: [Order!]!
  orderDetailList: [OrderDetail!]!
  pointsHistoryList: [PointsHistory!]!
  promotionList: [Promotion!]!
  revenueList: [Revenue!]!
  tableList: [Table!]!
  reservationList: [Reservation!]!
  reviewList: [Review!]!
  voucherList: [Voucher!]!
  employeeList: [Employee!]!
  positionList: [Position!]!
}

# TypeDefs
type Category {
  id: ID!
  name: String!
  items: [Menu!]!
}

type Menu {
  id: ID!
  name: String!
  description: String!
  price: Float!
  image: String!
  category: Category!
}

type Content {
  id: ID!
  title: String!
  slogan: String
  description: String!
}

type Customer {
  id: ID!
  name: String!
  phone: String!
  email: String!
  address: [CustomerAddress]!
  birthday: DateTime!
  points: Int!
  level: CustomerLevel!
  status: Boolean!
  username: String!
  password: String!
  createdDate: DateTime!
  updatedDate: DateTime!
  invoice: [Invoice!]
  orders: [Order!]
  pointsHistory: [PointsHistory!]
  reservations: [Reservation!]
  reviews: [Review!]
  vouchers: [Voucher!]
}

type CustomerAddress {
  id: ID!
  customer: Customer!
  address: String!
}

type CustomerLevel {
  id: ID!
  name: String!
  description: String!
  discount: Float!
  points: Int!
  benefits: String!
  customers: [Customer!]
}

type Invoice {
  id: ID!
  date: DateTime!
  customer: Customer!
  voucher: Voucher
  paymentMethod: PaymentMethod!
  paymentStatus: Boolean!
  note: String
  invoiceDetails: [InvoiceDetail!]!
}

type InvoiceDetail {
  id: ID!
  invoice: Invoice!
  item: Menu!
  quantity: Int!
  price: Float!
  total: Float!
}

type Order {
  id: ID!
  customer: Customer!
  status: Boolean!
  address: String!
  shippingMethod: String!
  shippingFee: Float!
  paymentMethod: String!
  paymentStatus: Boolean!
  createdDate: DateTime!
  updatedDate: DateTime!
  orderDetails: [OrderDetail!]!
}

type OrderDetail {
  id: ID!
  order: Order!
  item: Menu!
  quantity: Int!
  price: Float!
  total: Float!
}

type PointsHistory {
  id: ID!
  customer: Customer!
  order: Order
  voucher: Voucher
  earnedPoints: Int
  deductedPoints: Int
  transactionDate: DateTime!
}

type Reservation {
  id: ID!
  customer: Customer!
  table: Table!
  description: String!
  reservationDate: DateTime!
  status: Boolean!
}

type Table {
  id: ID!
  name: String!
  capacity: Int!
  status: Boolean!
}
type Review {
  id: ID!
  customer: Customer!
  content: String!
  rating: Int!
  status: Boolean!
  createdDate: DateTime!
}

type Promotion {
  id: ID!
  name: String!
  description: String!
  startDate: DateTime!
  endDate: DateTime!
  target: String!
  condition: String!
  discount: Float!
  status: Boolean!
}

type Revenue {
  id: ID!
  date: DateTime!
  revenue: Float!
  cost: Float!
}

type Voucher {
  id: ID!
  customer: Customer!
  name: String!
  code: String!
  description: String!
  discount: Float!
  expireDate: DateTime!
  status: Boolean!
}

type Employee {
  id: ID!
  name: String!
  gender: String!
  email: String!
  phone: String!
  address: String!
  birthday: DateTime!
  position: Position!
  status: Boolean!
  isAdmin: Boolean!
  username: String!
  password: String!
  createdDate: DateTime!
  updatedDate: DateTime!
}

type Position {
  id: ID!
  name: String!
  description: String!
  salary: Float!
  employees: [Employee!]
}

scalar DateTime
